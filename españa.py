import streamlit as st
import pandas as pd
import plotly.express as px
import plotly.graph_objects as go
from datetime import datetime

# Configuraci√≥n de la p√°gina
st.set_page_config(
    page_title="Elecciones Espa√±a - Datos Oficiales",
    page_icon="üá™üá∏",
    layout="wide"
)

# CSS personalizado
st.markdown("""
<style>
    .main-header {
        font-size: 2.5rem;
        color: #C60B1E;
        text-align: center;
        margin-bottom: 2rem;
    }
    .section-header {
        font-size: 1.8rem;
        color: #C60B1E;
        border-bottom: 2px solid #C60B1E;
        padding-bottom: 0.5rem;
        margin-top: 2rem;
    }
    .info-box {
        background-color: #f0f2f6;
        padding: 1rem;
        border-radius: 10px;
        border-left: 4px solid #C60B1E;
        margin: 1rem 0;
    }
    .metric-card {
        background: linear-gradient(135deg, #C60B1E, #FFC400);
        color: white;
        padding: 1rem;
        border-radius: 10px;
        text-align: center;
    }
</style>
""", unsafe_allow_html=True)

# T√≠tulo principal
st.markdown('<h1 class="main-header">üá™üá∏ Datos Oficiales - Elecciones Espa√±a</h1>', unsafe_allow_html=True)

# Introducci√≥n
st.info("""
**Fuentes oficiales**: Ministerio del Interior - Gobierno de Espa√±a ¬∑ Instituto Nacional de Estad√≠stica (INE) ¬∑ Junta Electoral Central
**√öltima actualizaci√≥n**: Datos oficiales de procesos electorales 2023-2024
""")

# ===== DATOS DEL CENSO ELECTORAL =====
st.markdown('<h2 class="section-header">üìã Censo Electoral</h2>', unsafe_allow_html=True)

col1, col2, col3, col4 = st.columns(4)

with col1:
    st.markdown("""
    <div class="metric-card">
        <h3>35.5M</h3>
        <p>Electores totales</p>
    </div>
    """, unsafe_allow_html=True)

with col2:
    st.markdown("""
    <div class="metric-card">
        <h3>34.7M</h3>
        <p>Espa√±a peninsular</p>
    </div>
    """, unsafe_allow_html=True)

with col3:
    st.markdown("""
    <div class="metric-card">
        <h3>2.1M</h3>
        <p>Extranjero (CERA)</p>
    </div>
    """, unsafe_allow_html=True)

with col4:
    st.markdown("""
    <div class="metric-card">
        <h3>136K</h3>
        <p>Residentes ausentes</p>
    </div>
    """, unsafe_allow_html=True)

# ===== CALENDARIO ELECTORAL =====
st.markdown('<h2 class="section-header">üìÖ Calendario Electoral</h2>', unsafe_allow_html=True)

calendario_data = {
    'Proceso Electoral': [
        'Elecciones Generales (Congreso y Senado)',
        'Elecciones al Parlamento Europeo',
        'Elecciones Auton√≥micas',
        'Elecciones Municipales',
        'Elecciones al Parlamento Europeo pr√≥ximas'
    ],
    'Fecha': [
        '23 de Julio 2023',
        '26 de Mayo 2019',
        '28 de Mayo 2023 (12 CCAA)',
        '28 de Mayo 2023',
        '9 de Junio 2024'
    ],
    '√Åmbito': [
        'Nacional',
        'Europeo',
        'Auton√≥mico',
        'Municipal',
        'Europeo'
    ],
    'Estado': [
        'Celebradas',
        'Celebradas',
        'Celebradas',
        'Celebradas',
        'Pr√≥ximas'
    ]
}

df_calendario = pd.DataFrame(calendario_data)
st.dataframe(df_calendario, use_container_width=True, hide_index=True)

# ===== PARTICIPACI√ìN ELECTORAL =====
st.markdown('<h2 class="section-header">üìä Participaci√≥n Electoral Hist√≥rica</h2>', unsafe_allow_html=True)

# Datos reales del Ministerio del Interior
participacion_data = {
    'A√±o': [2015, 2016, 2019_Abr, 2019_Nov, 2023],
    'Proceso': [
        'Generales Diciembre',
        'Generales Junio',
        'Generales Abril',
        'Generales Noviembre',
        'Generales Julio'
    ],
    'Participaci√≥n (%)': [73.2, 69.8, 75.8, 69.9, 66.6],
    'Votos v√°lidos (millones)': [23.7, 22.2, 25.5, 21.9, 20.8]
}

df_participacion = pd.DataFrame(participacion_data)

col1, col2 = st.columns(2)

with col1:
    fig_participacion = px.line(
        df_participacion,
        x='A√±o',
        y='Participaci√≥n (%)',
        title='Evoluci√≥n Participaci√≥n Elecciones Generales (%)',
        markers=True,
        line_shape='linear'
    )
    fig_participacion.update_traces(line=dict(width=4, color='#C60B1E'))
    fig_participacion.update_layout(height=400)
    st.plotly_chart(fig_participacion, use_container_width=True)

with col2:
    fig_votos = px.bar(
        df_participacion,
        x='A√±o',
        y='Votos v√°lidos (millones)',
        title='Votos V√°lidos en Elecciones Generales (Millones)',
        color='Participaci√≥n (%)',
        color_continuous_scale='Reds'
    )
    st.plotly_chart(fig_votos, use_container_width=True)

# ===== COMPOSICI√ìN ACTUAL DEL CONGRESO =====
st.markdown('<h2 class="section-header">üèõÔ∏è Composici√≥n del Congreso de los Diputados</h2>', unsafe_allow_html=True)

# Datos reales tras elecciones 2023
congreso_data = {
    'Grupo Parlamentario': [
        'Partido Popular (PP)',
        'Partido Socialista (PSOE)',
        'Sumar',
        'Vox',
        'ERC',
        'Junts',
        'EH Bildu',
        'PNV',
        'BNG',
        'CC',
        'UPN',
        'Otros'
    ],
    'Esca√±os': [137, 121, 31, 33, 7, 7, 6, 5, 1, 1, 1, 0],
    'Color': ['#1E90FF', '#FF0000', '#FF69B4', '#00CED1', '#FFD700', '#800080', '#008000', '#006600', '#8B4513', '#FF8C00', '#4682B4', '#A9A9A9']
}

df_congreso = pd.DataFrame(congreso_data)

col1, col2 = st.columns([2, 1])

with col1:
    fig_congreso = px.pie(
        df_congreso,
        values='Esca√±os',
        names='Grupo Parlamentario',
        title='Distribuci√≥n de Esca√±os - Congreso de los Diputados (350 esca√±os)',
        color='Grupo Parlamentario',
        color_discrete_sequence=df_congreso['Color'].tolist()
    )
    fig_congreso.update_traces(textposition='inside', textinfo='percent+label')
    st.plotly_chart(fig_congreso, use_container_width=True)

with col2:
    st.markdown("""
    <div class="info-box">
    <h4>üìä Datos Congreso 2023</h4>
    <p><strong>Total esca√±os:</strong> 350</p>
    <p><strong>Mayor√≠a absoluta:</strong> 176</p>
    <p><strong>Esca√±os asignados:</strong> 350</p>
    <p><strong>Grupos parlamentarios:</strong> 9</p>
    </div>
    """, unsafe_allow_html=True)
    
    # Mostrar tabla de esca√±os
    st.dataframe(
        df_congreso[['Grupo Parlamentario', 'Esca√±os']].sort_values('Esca√±os', ascending=False),
        use_container_width=True,
        height=400
    )

# ===== SISTEMA ELECTORAL ESPA√ëOL =====
st.markdown('<h2 class="section-header">‚öñÔ∏è Sistema Electoral Espa√±ol</h2>', unsafe_allow_html=True)

col1, col2, col3 = st.columns(3)

with col1:
    st.markdown("""
    <div class="info-box">
    <h4>üèõÔ∏è Elecciones Generales</h4>
    <ul>
    <li><strong>Congreso:</strong> 350 diputados</li>
    <li><strong>Senado:</strong> 266 senadores</li>
    <li><strong>Ley D'Hondt:</strong> Sistema de reparto</li>
    <li><strong>Circunscripciones:</strong> 52 provincias</li>
    </ul>
    </div>
    """, unsafe_allow_html=True)

with col2:
    st.markdown("""
    <div class="info-box">
    <h4>üó≥Ô∏è Requisitos para Votar</h4>
    <ul>
    <li><strong>Edad:</strong> 18 a√±os cumplidos</li>
    <li><strong>Censo:</strong> Inscripci√≥n autom√°tica</li>
    <li><strong>Documentaci√≥n:</strong> DNI/pasaporte</li>
    <li><strong>Voto:</strong> Presencial o por correo</li>
    </ul>
    </div>
    """, unsafe_allow_html=True)

with col3:
    st.markdown("""
    <div class="info-box">
    <h4>üìà Caracter√≠sticas</h4>
    <ul>
    <li><strong>Voto:</strong> Voluntario</li>
    <li><strong>Umbral:</strong> 3% (congreso)</li>
    <li><strong>Legislatura:</strong> 4 a√±os</li>
    <li><strong>Convocatoria:</strong> Rey/Gobierno</li>
    </ul>
    </div>
    """, unsafe_allow_html=True)

# ===== DISTRIBUCI√ìN POR COMUNIDADES AUT√ìNOMAS =====
st.markdown('<h2 class="section-header">üó∫Ô∏è Distribuci√≥n por Circunscripciones</h2>', unsafe_allow_html=True)

# Datos de esca√±os por comunidad aut√≥noma
ccaa_data = {
    'Comunidad Aut√≥noma': [
        'Andaluc√≠a', 'Catalu√±a', 'Madrid', 'Comunidad Valenciana',
        'Galicia', 'Castilla y Le√≥n', 'Pa√≠s Vasco', 'Castilla-La Mancha',
        'Canarias', 'Regi√≥n de Murcia', 'Arag√≥n', 'Baleares',
        'Extremadura', 'Principado de Asturias', 'Navarra', 'Cantabria',
        'La Rioja', 'Ceuta', 'Melilla'
    ],
    'Esca√±os Congreso': [61, 48, 37, 33, 23, 31, 18, 21, 15, 10, 13, 8, 10, 8, 5, 5, 4, 1, 1],
    'Esca√±os Senado': [9, 16, 11, 9, 6, 9, 6, 6, 4, 3, 4, 2, 3, 2, 2, 2, 1, 1, 1]
}

df_ccaa = pd.DataFrame(ccaa_data)

fig_ccaa = px.bar(
    df_ccaa.sort_values('Esca√±os Congreso', ascending=True),
    y='Comunidad Aut√≥noma',
    x='Esca√±os Congreso',
    orientation='h',
    title='Esca√±os en el Congreso por Comunidad Aut√≥noma',
    color='Esca√±os Congreso',
    color_continuous_scale='Reds'
)
fig_ccaa.update_layout(height=500)
st.plotly_chart(fig_ccaa, use_container_width=True)

# ===== DATOS DEMOGR√ÅFICOS ELECTORALES =====
st.markdown('<h2 class="section-header">üìà Perfil Demogr√°fico del Electorado</h2>', unsafe_allow_html=True)

col1, col2 = st.columns(2)

with col1:
    # Datos por grupo de edad (INE)
    edad_data = {
        'Grupo Edad': ['18-24', '25-34', '35-44', '45-54', '55-64', '65-74', '75+'],
        'Porcentaje Censo': [8.2, 15.3, 17.8, 18.9, 15.6, 12.1, 12.1],
        'Participaci√≥n (%)': [45.2, 58.7, 65.3, 72.1, 78.4, 80.2, 75.6]
    }
    
    df_edad = pd.DataFrame(edad_data)
    
    fig_edad = px.bar(
        df_edad,
        x='Grupo Edad',
        y=['Porcentaje Censo', 'Participaci√≥n (%)'],
        title='Distribuci√≥n y Participaci√≥n por Grupos de Edad',
        barmode='group'
    )
    st.plotly_chart(fig_edad, use_container_width=True)

with col2:
    # Datos por sexo (INE)
    sexo_data = {
        'Sexo': ['Mujeres', 'Hombres'],
        'Porcentaje Censo': [51.8, 48.2],
        'Participaci√≥n (%)': [68.3, 64.9]
    }
    
    df_sexo = pd.DataFrame(sexo_data)
    
    fig_sexo = px.pie(
        df_sexo,
        values='Porcentaje Censo',
        names='Sexo',
        title='Distribuci√≥n del Censo por Sexo (%)',
        color='Sexo',
        color_discrete_map={'Mujeres': '#FF69B4', 'Hombres': '#1E90FF'}
    )
    st.plotly_chart(fig_sexo, use_container_width=True)

# ===== ORGANISMOS ELECTORALES =====
st.markdown('<h2 class="section-header">üè¢ √ìrganos Electorales</h2>', unsafe_allow_html=True)

organismos_data = {
    '√ìrgano Electoral': [
        'Junta Electoral Central',
        'Juntas Electorales Provinciales',
        'Juntas Electorales de Zona',
        'Mesas Electorales'
    ],
    'Composici√≥n': [
        '13 miembros + Presidente',
        'Jueces + profesores + abogados',
        'Jueces designados',
        '1 Presidente + 2 Vocales'
    ],
    'Funci√≥n Principal': [
        'Direcci√≥n y control del proceso',
        'Organizaci√≥n provincial',
        'Gesti√≥n de mesas electorales',
        'Desarrollo de la votaci√≥n'
    ]
}

df_organismos = pd.DataFrame(organismos_data)
st.dataframe(df_organismos, use_container_width=True, hide_index=True)

# ===== INFORMACI√ìN ADICIONAL =====
st.markdown('<h2 class="section-header">‚ÑπÔ∏è Informaci√≥n Adicional</h2>', unsafe_allow_html=True)

tab1, tab2, tab3 = st.tabs(["üîó Enlaces Oficiales", "üìû Contacto", "üìö Legislaci√≥n"])

with tab1:
    st.markdown("""
    **Enlaces Institucionales Oficiales:**
    - [Ministerio del Interior - Resultados Electorales](https://www.infoelectoral.mir.es/)
    - [Junta Electoral Central](https://www.juntaelectoralcentral.es/)
    - [Instituto Nacional de Estad√≠stica (INE)](https://www.ine.es/)
    - [Congreso de los Diputados](https://www.congreso.es/)
    - [Senado de Espa√±a](https://www.senado.es/)
    """)

with tab2:
    st.markdown("""
    **Informaci√≥n de Contacto:**
    - üìû Ministerio del Interior: 915 37 70 00
    - üåê Web electoral: https://www.infoelectoral.mir.es
    - üìß Contacto JEC: jec@juntaelectoralcentral.es
    - üè¢ Direcci√≥n: C/ Amador de los R√≠os, 7 - 28010 Madrid
    """)

with tab3:
    st.markdown("""
    **Normativa Electoral Principal:**
    - Ley Org√°nica 5/1985, de 19 de junio, del R√©gimen Electoral General
    - Constituci√≥n Espa√±ola de 1978
    - Ley Org√°nica 2/2011, de 28 de enero, de financiaci√≥n de partidos pol√≠ticos
    - Ley Org√°nica 3/2015, de 30 de marzo, de control de la actividad econ√≥mico-financiera de los partidos pol√≠ticos
    """)

# Footer
st.markdown("---")
st.markdown("""
<div style='text-align: center'>
    <p><strong>üá™üá∏ Datos Oficiales - Elecciones Espa√±a</strong></p>
    <p>Informaci√≥n basada en datos p√∫blicos del Ministerio del Interior y el INE</p>
    <p>√öltima actualizaci√≥n: Febrero 2024 ¬∑ Fuente: Gobierno de Espa√±a</p>
</div>
""", unsafe_allow_html=True)
